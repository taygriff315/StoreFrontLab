@model StoreFrontLab.Data.EF.Product

@{
    ViewBag.Title = "Create Product";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal text-center justify-content-center">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group text-center">
            @Html.LabelFor(model => model.ProductTypeID, "ProductTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12 text-center justify-content-center d-flex">
                @Html.DropDownList("ProductTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            @Html.LabelFor(model => model.ManufacturerID, "ManufacturerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12 text-center justify-content-center d-flex">
                @Html.DropDownList("ManufacturerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ManufacturerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            @Html.LabelFor(model => model.UnitsSold, htmlAttributes: new { @class = "control-label col-md-2 text-center" })
            <div class="col-md-12 text-center">
                @Html.EditorFor(model => model.UnitsSold, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitsSold, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            @Html.LabelFor(model => model.InStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.InStock)
                    @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group text-center justify-content-center d-flex" style="margin: 2%;">
            @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2 text-center" })
            <div class="col-md-2 d-flex justify-content-between text-center">
                <input type="file" name="coverImg" />

                @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            @Html.LabelFor(model => model.IsSeasonal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSeasonal)
                    @Html.ValidationMessageFor(model => model.IsSeasonal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group text-center">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div class="text-center">
    <a href="@Url.Action("Index","Products")" class="btn btn-primary">Back to List</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
